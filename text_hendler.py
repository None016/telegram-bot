import Inline_keyboard
import global_variable
from global_variable import *
import function as fun
import Replay_keyboard
import DB


@bi.message_handler(content_types=["text", "photo"])
async def text(sms: ai.types.Message):
    if f"{sms.chat.id}" in user_keys.keys():
        data = user_keys[f"{sms.chat.id}"][0]

        if data[0] == 1:  # –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –¥–ª—è –≤–≤–æ–¥–∞ –ø–µ—Ä–µ–¥ –ø–æ–ª–æ–º
            fun.add_user_key(sms, data)
            await bi.bot.send_message(sms.chat.id, fun.input_reg(sms.chat.id),
                                      reply_markup=Replay_keyboard.sex_keyboard)

        elif data[0] == 2:
            if sms.text in global_variable.converter_for_sex.keys():
                # ^^^^^^^^^^ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –≤–µ—Ä–Ω–æ–≥–æ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è
                fun.add_user_key(sms, data)
                await bi.bot.send_message(sms.chat.id, fun.input_reg(sms.chat.id))
            else:
                user_keys[f"{sms.chat.id}"][0] = 2  # –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ —Å—á–µ—Ç—á–∏–∫–∞
                await bi.bot.send_message(sms.chat.id, fun.input_reg(sms.chat.id),
                                          reply_markup=Replay_keyboard.sex_keyboard)

        elif data[0] == 3:
            fun.add_user_key(sms, data)
            await bi.bot.send_message(sms.chat.id, fun.input_reg(sms.chat.id))

        elif data[0] == 4:       # –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –µ—Å–ª–∏ –ø—Ä–∏—à–ª–æ –≤—Ä–µ–º—è –¥–ª—è —Ñ–æ—Ç–æ
            if sms.photo:
                user_keys[f"{sms.chat.id}"][0][data[0]] = sms.photo[-1].file_id
                user_keys[f"{sms.chat.id}"][0][0] += 1
                await bi.bot.send_message(sms.chat.id, fun.input_reg(sms.chat.id),
                                          reply_markup=Replay_keyboard.skip_description)
            else:
                user_keys[f"{sms.chat.id}"][0][0] = 4
                await bi.bot.send_message(sms.chat.id, fun.input_reg(sms.chat.id))

        elif data[0] == 5:
            if sms.text == "–û—Å—Ç–∞–≤–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –ø—É—Å—Ç—ã–º":
                user_keys[f"{sms.chat.id}"][0][data[0]] = " "  # –ó–∞–ø–∏—Å—å –∑–Ω–∞—á–µ–Ω–∏–π –≤ —Å–ª–æ–≤–∞—Ä—å
                user_keys[f"{sms.chat.id}"][0][0] += 1  # –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ —Å—á–µ—Ç—á–∏–∫–∞
            else:
                fun.add_user_key(sms, data)
            await bi.bot.send_message(sms.chat.id, fun.input_reg(sms.chat.id),
                                      reply_markup=Replay_keyboard.search_by_gender)

        elif data[0] == 6:
            if sms.text in global_variable.converter_for_sex_poisc.keys():
                # ^^^^^^^^^^ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –≤–µ—Ä–Ω–æ–≥–æ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è
                fun.add_user_key(sms, data)
                await bi.bot.send_message(sms.chat.id, fun.input_reg(sms.chat.id))
            else:
                user_keys[f"{sms.chat.id}"][0][0] = 6
                await bi.bot.send_message(sms.chat.id, fun.input_reg(sms.chat.id),
                                          reply_markup=Replay_keyboard.search_by_gender)

        elif data[0] == 7:
            user_keys[f"{sms.chat.id}"][0][data[0]] = sms.text  # –ó–∞–ø–∏—Å—å –∑–Ω–∞—á–µ–Ω–∏–π –≤ —Å–ª–æ–≤–∞—Ä—å
            user_keys[f"{sms.chat.id}"][0][0] = -1
            await bi.bot.send_photo(sms.chat.id, photo=data[4],
                                    caption=f"{data[1]}, {data[2]}, {data[3]} \n{data[5]}")
            await bi.bot.send_message(sms.chat.id, "–í—Å–µ –≤–µ—Ä–Ω–æ?",
                                      reply_markup=Replay_keyboard.binary_response)

        elif data[0] == -1:
            DB.add_user(sms.chat.id, sms["from"]["first_name"], data[2],
                        data[1], data[4], data[5], data[6], data[7], data[3])
            del (user_keys[f"{sms.chat.id}"])
            if sms.text == "–î–∞":
                await bot.send_message(sms.chat.id, "–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup=Replay_keyboard.menu)

    elif sms.text == "–ò–∑–º–µ–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É" and DB.check_for_availability_user(sms.chat.id):
        await bi.bot.send_message(sms.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è", reply_markup=Inline_keyboard.registration_two)
    elif sms.text == "–ú–æ—è –∞–Ω–∫–µ—Ç–∞" and DB.check_for_availability_user(sms.chat.id):
        await fun.print_inf_user(sms.chat.id, sms)   # –í—ã–≤–æ–¥–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        await bot.send_message(sms.chat.id, "–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup=Replay_keyboard.menu)
    elif (sms.text == "üöÄ–õ–µ–Ω—Ç–∞üöÄ") and DB.check_for_availability_user(sms.chat.id):
        user_keys3[f"{sms.chat.id}"] = [[], []]  # 1 –¥–ª—è –ø–æ–∫–∞–∑–∞ 2 –¥–ª—è –ø—Ä–æ—à–µ–¥—à–∏—Ö –ø–æ–∫–∞–∑
        await bi.bot.send_message(sms.chat.id, "–•–æ—Ä–æ—à–µ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞", reply_markup=Replay_keyboard.assessment)
        await fun.recommendations(sms)
    elif (sms.text == "üí§") and DB.check_for_availability_user(sms.chat.id) and f"{sms.chat.id}" in user_keys3.keys():  # —É—Ö–æ–¥ –≤ —Å–ø—è—â–∏–π —Ä–µ–∂–∏–º
        del(user_keys3[f"{sms.chat.id}"])
        await bi.bot.send_message(sms.chat.id, "–ü–æ–¥–æ–∂–¥–µ–º –ø–æ–∫–∞ —Ç–µ–±—è –∫—Ç–æ —Ç–æ –ª–∞–π–∫–Ω–∏—Ç", reply_markup=Replay_keyboard.menu)
    elif (sms.text == "‚ù§Ô∏è") and f"{sms.chat.id}" in user_keys3.keys():
        await fun.like(sms)
        if f"{sms.chat.id}" in user_keys3.keys():
            await fun.recommendations(sms)
    if sms.text == "üëé" and f"{sms.chat.id}" in user_keys3.keys():
        db = DB.DB("Clop.db")
        data4 = db.SELECT("like_user", f"id_user2 == {sms.chat.id}")
        if data4:
            for i in data4:
                if i[0] == user_keys3[f"{sms.chat.id}"][1][0]:
                    db.DELETE("like_user",
                              f"id_user2 == {sms.chat.id} and id_user1 == {user_keys3[f'{sms.chat.id}'][1][0]}")
        await fun.recommendations(sms)
    elif f"{sms.chat.id}" in user_keys2.keys():     # –û—Ç–ª–æ–≤ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∞–Ω–∫–µ—Ç—ã
        data = user_keys2[f"{sms.chat.id}"]
        db = DB.DB("Clop.db")
        if data[0] != 3 and data[0] != 2:
            fun.update_reg(sms, db, converter_for_re_registration[data[0]])
            await fun.print_inf_user(sms.chat.id, sms)  # –í—ã–≤–æ–¥–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        elif data[0] == 2:
            db.UPDATE("user", f"location = '{sms.text}'", f"id == {sms.chat.id}")
            db.UPDATE("user", f"location_no = '{sms.text.lower()}'", f"id == {sms.chat.id}")
            del (user_keys2[f"{sms.chat.id}"])
            await fun.print_inf_user(sms.chat.id, sms)  # –í—ã–≤–æ–¥–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
            await bot.send_message(sms.chat.id, "–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup=Replay_keyboard.menu)
        else:
            if sms.content_type == "photo":
                db.UPDATE("user", f"photo = '{sms.photo[-1].file_id}'", f"id == {sms.chat.id}")
                del(user_keys2[f"{sms.chat.id}"])
                await fun.print_inf_user(sms.chat.id, sms)   # –í—ã–≤–æ–¥–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
                await bot.send_message(sms.chat.id, "–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup=Replay_keyboard.menu)
            else:
                await bi.bot.send_message(sms.chat.id, "–û—Ç–ø—Ä–∞–≤—Ç–µ —Å–≤–æ–µ —Ñ–æ—Ç–æ")

